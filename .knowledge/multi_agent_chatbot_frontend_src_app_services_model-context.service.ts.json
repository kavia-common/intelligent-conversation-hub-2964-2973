{"is_source_file": true, "format": "TypeScript", "description": "This file defines an Angular service called ModelContextService that manages the Model Context Protocol (MCP) steps for a multi-turn conversation. It uses RxJS BehaviorSubject to maintain and observe protocol steps per turn, allowing the UI to render a timeline of context assembly and language model (LLM) calls.", "external_files": ["../models/context.models"], "external_methods": [], "published": ["ModelContextService"], "classes": [{"name": "ModelContextService", "description": "An Angular service class that manages protocol steps associated with conversation turns, enabling components to add, append, retrieve, and observe protocol data."}], "methods": [{"name": "addProtocol", "description": "Creates an empty protocol timeline for a specific turn ID if it does not already exist."}, {"name": "appendStep", "description": "Appends a protocol step to the timeline of a specified turn; creates the turn protocol if it does not exist."}, {"name": "watch", "description": "Returns an Observable to observe the protocol timeline for a specific turn ID."}, {"name": "get", "description": "Retrieves the current protocol snapshot for a specific turn ID."}], "calls": ["this.protocols$.subscribe", "this.protocols$.next", "this.addProtocol"], "search-terms": ["ModelContextService", "protocols$", "BehaviorSubject", "context.models", "appendStep", "watch", "get", "MultiAgentChatbot"], "state": 2, "file_id": 28, "knowledge_revision": 74, "git_revision": "", "ctags": [{"_type": "tag", "name": "ModelContextService", "path": "/home/kavia/workspace/code-generation/intelligent-conversation-hub-2964-2973/multi_agent_chatbot_frontend/src/app/services/model-context.service.ts", "pattern": "/^export class ModelContextService {$/", "language": "TypeScript", "kind": "class"}, {"_type": "tag", "name": "curr", "path": "/home/kavia/workspace/code-generation/intelligent-conversation-hub-2964-2973/multi_agent_chatbot_frontend/src/app/services/model-context.service.ts", "pattern": "/^    const curr = this.protocols$.value;$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "protocols$", "path": "/home/kavia/workspace/code-generation/intelligent-conversation-hub-2964-2973/multi_agent_chatbot_frontend/src/app/services/model-context.service.ts", "pattern": "/^  private protocols$ = new BehaviorSubject<Record<string, ModelContextProtocol>>({});$/", "language": "TypeScript", "kind": "property", "scope": "ModelContextService", "scopeKind": "class"}, {"_type": "tag", "name": "sub", "path": "/home/kavia/workspace/code-generation/intelligent-conversation-hub-2964-2973/multi_agent_chatbot_frontend/src/app/services/model-context.service.ts", "pattern": "/^      const sub = this.protocols$.subscribe(map => {$/", "language": "TypeScript", "kind": "constant"}], "hash": "67099c70eab9232e3384873bbe066192", "format-version": 4, "code-base-name": "multi_agent_chatbot_frontend", "filename": "multi_agent_chatbot_frontend/src/app/services/model-context.service.ts", "fields": [{"name": "private protocols$ = new BehaviorSubject<Record<string, ModelContextProtocol>>({});", "scope": "ModelContextService", "scopeKind": "class", "description": "unavailable"}], "revision_history": [{"74": ""}]}