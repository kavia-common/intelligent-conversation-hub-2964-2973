{"is_source_file": true, "format": "TypeScript (Angular component)", "description": "This file defines an Angular component 'ChatPageComponent' responsible for managing the main chat interface. It handles agent selection, conversations, message sending, and subscribes to chat service observables to update the UI accordingly.", "external_files": ["../../services/chat.service", "./chat-page.component.html", "./chat-page.component.css"], "external_methods": ["ChatService.getAgents()", "ChatService.watchConversations()", "ChatService.watchActiveAgent()", "ChatService.setActiveAgent()", "ChatService.newConversation()", "ChatService.sendMessage()"], "published": ["trackById", "selectAgent", "newChat", "send", "onKeydown", "asUser", "asAgent"], "classes": [{"name": "ChatPageComponent", "description": "Main component for the chat page interface, managing conversations, agents, and message flow."}], "methods": [{"name": "trackById", "description": "Provides a trackBy function for ngFor iterations to optimize rendering."}, {"name": "selectAgent", "description": "Sets the specified agent as active for subsequent messages."}, {"name": "newChat", "description": "Creates a new conversation and sets it as active."}, {"name": "send", "description": "Sends the current draft message via ChatService and handles loading state."}, {"name": "onKeydown", "description": "Handles keyboard events to detect Cmd/Ctrl+Enter for sending message."}, {"name": "asUser", "description": "Checks if a message role is 'user'."}, {"name": "asAgent", "description": "Checks if a message role is 'agent'."}], "calls": ["this.chat.getAgents()", "this.chat.watchConversations()", "this.chat.watchActiveAgent()", "this.chat.setActiveAgent()", "this.chat.newConversation()", "this.chat.sendMessage()"], "search-terms": ["Angular ChatPageComponent", "chat interface management", "AgentSummary conversation handling", "sendMessage subscription", "active conversation selection"], "state": 2, "file_id": 24, "knowledge_revision": 62, "git_revision": "", "revision_history": [{"55": ""}, {"62": ""}], "ctags": [{"_type": "tag", "name": "ChatPageComponent", "path": "/home/kavia/workspace/code-generation/intelligent-conversation-hub-2964-2973/multi_agent_chatbot_frontend/src/app/pages/chat-page/chat-page.component.ts", "pattern": "/^export class ChatPageComponent {$/", "language": "TypeScript", "kind": "class"}, {"_type": "tag", "name": "agents", "path": "/home/kavia/workspace/code-generation/intelligent-conversation-hub-2964-2973/multi_agent_chatbot_frontend/src/app/pages/chat-page/chat-page.component.ts", "pattern": "/^  agents: AgentSummary[] = [];$/", "language": "TypeScript", "kind": "property", "scope": "ChatPageComponent", "scopeKind": "class"}, {"_type": "tag", "name": "conversations", "path": "/home/kavia/workspace/code-generation/intelligent-conversation-hub-2964-2973/multi_agent_chatbot_frontend/src/app/pages/chat-page/chat-page.component.ts", "pattern": "/^  conversations: Conversation[] = [];$/", "language": "TypeScript", "kind": "property", "scope": "ChatPageComponent", "scopeKind": "class"}, {"_type": "tag", "name": "id", "path": "/home/kavia/workspace/code-generation/intelligent-conversation-hub-2964-2973/multi_agent_chatbot_frontend/src/app/pages/chat-page/chat-page.component.ts", "pattern": "/^    const id = this.chat.newConversation('New Chat');$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "text", "path": "/home/kavia/workspace/code-generation/intelligent-conversation-hub-2964-2973/multi_agent_chatbot_frontend/src/app/pages/chat-page/chat-page.component.ts", "pattern": "/^    const text = this.draft().trim();$/", "language": "TypeScript", "kind": "constant"}], "hash": "0d5ba3f3db6198e7759f48d46010fb48", "format-version": 4, "code-base-name": "multi_agent_chatbot_frontend", "filename": "multi_agent_chatbot_frontend/src/app/pages/chat-page/chat-page.component.ts", "fields": [{"name": "agents: AgentSummary[] = [];", "scope": "ChatPageComponent", "scopeKind": "class", "description": "unavailable"}, {"name": "conversations: Conversation[] = [];", "scope": "ChatPageComponent", "scopeKind": "class", "description": "unavailable"}]}