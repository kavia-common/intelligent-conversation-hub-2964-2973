{"is_source_file": true, "format": "TypeScript", "description": "Angular component for the chat page, managing conversations, agents, message sending, and UI interactions.", "external_files": ["../../services/chat.service", "../../models/chat.models", "../../services/model-context.service", "../../models/context.models"], "external_methods": ["ChatService.getAgents", "ChatService.watchConversations", "ChatService.setActiveAgent", "ChatService.newConversation", "ChatService.sendMessage", "ChatService.watchActiveAgent", "ModelContextService.get"], "published": ["trackById", "selectAgent", "newChat", "send", "onKeydown", "asUser", "asAgent", "getProtocolSteps", "getLastProtocolTurnId"], "classes": [{"name": "ChatPageComponent", "description": "Angular component serving as the main chat page layout including sidebar, message history, and context panels."}], "methods": [{"name": "trackById", "description": "Track function for ngFor, returning item id to optimize rendering."}, {"name": "selectAgent", "description": "Sets the active agent based on user selection."}, {"name": "newChat", "description": "Creates and switches to a new conversation."}, {"name": "send", "description": "Sends the drafted message, handles UI state during message transmission."}, {"name": "onKeydown", "description": "Handles keydown events, allowing Ctrl/Cmd+Enter to send messages."}, {"name": "asUser", "description": "Helper to determine if a message role is 'user'."}, {"name": "asAgent", "description": "Helper to determine if a message role is 'agent'."}, {"name": "getProtocolSteps", "description": "Returns protocol steps for a given turn ID from the Model Context Service."}, {"name": "getLastProtocolTurnId", "description": "Returns the protocol turn ID of the last message in the current conversation, if available."}], "calls": ["this.chat.getAgents", "this.chat.watchConversations", "this.chat.setActiveAgent", "this.chat.newConversation", "this.chat.sendMessage", "this.chat.watchActiveAgent", "this.mcp.get"], "search-terms": ["ChatPageComponent", "Angular chat page", "Conversation management", "Agent selection", "Message sending", "protocol steps", "active conversation"], "state": 2, "file_id": 24, "knowledge_revision": 91, "git_revision": "99059811e52a51e9f88da97fd5c4e5200e64f7a7", "revision_history": [{"55": ""}, {"62": ""}, {"77": "99059811e52a51e9f88da97fd5c4e5200e64f7a7"}, {"78": "99059811e52a51e9f88da97fd5c4e5200e64f7a7"}, {"83": "99059811e52a51e9f88da97fd5c4e5200e64f7a7"}, {"85": "99059811e52a51e9f88da97fd5c4e5200e64f7a7"}, {"88": "99059811e52a51e9f88da97fd5c4e5200e64f7a7"}, {"91": "99059811e52a51e9f88da97fd5c4e5200e64f7a7"}], "ctags": [{"_type": "tag", "name": "ChatPageComponent", "path": "/home/kavia/workspace/code-generation/intelligent-conversation-hub-2964-2973/multi_agent_chatbot_frontend/src/app/pages/chat-page/chat-page.component.ts", "pattern": "/^export class ChatPageComponent {$/", "language": "TypeScript", "kind": "class"}, {"_type": "tag", "name": "agents", "path": "/home/kavia/workspace/code-generation/intelligent-conversation-hub-2964-2973/multi_agent_chatbot_frontend/src/app/pages/chat-page/chat-page.component.ts", "pattern": "/^  agents: AgentSummary[] = [];$/", "language": "TypeScript", "kind": "property", "scope": "ChatPageComponent", "scopeKind": "class"}, {"_type": "tag", "name": "conversations", "path": "/home/kavia/workspace/code-generation/intelligent-conversation-hub-2964-2973/multi_agent_chatbot_frontend/src/app/pages/chat-page/chat-page.component.ts", "pattern": "/^  conversations: Conversation[] = [];$/", "language": "TypeScript", "kind": "property", "scope": "ChatPageComponent", "scopeKind": "class"}, {"_type": "tag", "name": "id", "path": "/home/kavia/workspace/code-generation/intelligent-conversation-hub-2964-2973/multi_agent_chatbot_frontend/src/app/pages/chat-page/chat-page.component.ts", "pattern": "/^    const id = this.chat.newConversation('New Chat');$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "last", "path": "/home/kavia/workspace/code-generation/intelligent-conversation-hub-2964-2973/multi_agent_chatbot_frontend/src/app/pages/chat-page/chat-page.component.ts", "pattern": "/^    const last = msgs[msgs.length - 1];$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "msgs", "path": "/home/kavia/workspace/code-generation/intelligent-conversation-hub-2964-2973/multi_agent_chatbot_frontend/src/app/pages/chat-page/chat-page.component.ts", "pattern": "/^    const last = msgs[msgs.length - 1];$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "msgs", "path": "/home/kavia/workspace/code-generation/intelligent-conversation-hub-2964-2973/multi_agent_chatbot_frontend/src/app/pages/chat-page/chat-page.component.ts", "pattern": "/^    const msgs = this.activeConversation?.messages;$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "text", "path": "/home/kavia/workspace/code-generation/intelligent-conversation-hub-2964-2973/multi_agent_chatbot_frontend/src/app/pages/chat-page/chat-page.component.ts", "pattern": "/^    const text = this.draft().trim();$/", "language": "TypeScript", "kind": "constant"}], "hash": "73207eed68e7e272c580e78a5a01cc85", "format-version": 4, "code-base-name": "multi_agent_chatbot_frontend", "filename": "multi_agent_chatbot_frontend/src/app/pages/chat-page/chat-page.component.ts", "fields": [{"name": "agents: AgentSummary[] = [];", "scope": "ChatPageComponent", "scopeKind": "class", "description": "unavailable"}, {"name": "conversations: Conversation[] = [];", "scope": "ChatPageComponent", "scopeKind": "class", "description": "unavailable"}]}