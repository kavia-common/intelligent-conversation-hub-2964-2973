{"is_source_file": true, "format": "TypeScript", "description": "This file contains the ChatService class for managing multi-agent conversations, message flow, and mock retrieval and processing for a chatbot frontend project. It handles conversation state, agent states, message sending, and orchestrates the pipeline including planning, retrieval, packing context, and response generation.", "external_files": ["../models/chat.models", "../models/context.models", "./model-context.service"], "external_methods": ["this.mcp.addProtocol", "this.mcp.appendStep"], "published": ["ChatService"], "classes": [{"name": "ChatService", "description": "Service managing conversations, agent states, message flow, and mock retrieval for a multi-agent chatbot."}], "methods": [{"name": "constructor(private mcp: ModelContextService) {} constructor", "description": "Injects ModelContextService dependency.", "scope": "ChatService", "scopeKind": "class"}, {"name": "private uuid(): string { uuid", "description": "Generates a UUID string, preferring Web Crypto if available.", "scope": "ChatService", "scopeKind": "class"}, {"name": "getAgents", "description": "Returns the list of available agents."}, {"name": "watchConversations", "description": "Returns an observable of current conversations."}, {"name": "watchActiveConversation", "description": "Returns an observable of the currently active conversation."}, {"name": "watchActiveAgent", "description": "Returns an observable of the currently active agent."}, {"name": "setActiveAgent", "description": "Sets the active agent and updates current conversation with the selected agent."}, {"name": "newConversation", "description": "Creates a new conversation with optional title, sets it as active."}, {"name": "sendMessage", "description": "Simulates sending a message by orchestrating planning, retrieval, packing, and generation steps with delays."}, {"name": "pushMessage", "description": "Adds a message to a specific conversation and updates timestamp."}, {"name": "setAgentState", "description": "Updates the state of an agent with status and optional note."}, {"name": "mockRag", "description": "Creates mock retrieval chunks based on query."}, {"name": "generateReply", "description": "Creates a synthesized reply text based on retrieved chunks."}], "calls": ["this.mcp.addProtocol", "this.mcp.appendStep", "this.setAgentState", "this.pushMessage"], "search-terms": ["ChatService", "multi-agent conversation", "orchestrate message pipeline", "mock retrieval", "AgentSummary"], "state": 2, "file_id": 23, "knowledge_revision": 87, "git_revision": "99059811e52a51e9f88da97fd5c4e5200e64f7a7", "revision_history": [{"53": ""}, {"66": ""}, {"67": ""}, {"75": "99059811e52a51e9f88da97fd5c4e5200e64f7a7"}, {"82": "99059811e52a51e9f88da97fd5c4e5200e64f7a7"}, {"87": "99059811e52a51e9f88da97fd5c4e5200e64f7a7"}], "ctags": [{"_type": "tag", "name": "ChatService", "path": "/home/kavia/workspace/code-generation/intelligent-conversation-hub-2964-2973/multi_agent_chatbot_frontend/src/app/services/chat.service.ts", "pattern": "/^export class ChatService {$/", "language": "TypeScript", "kind": "class"}, {"_type": "tag", "name": "agentId", "path": "/home/kavia/workspace/code-generation/intelligent-conversation-hub-2964-2973/multi_agent_chatbot_frontend/src/app/services/chat.service.ts", "pattern": "/^      agentId: this.activeAgentId$.value,$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "agentId", "path": "/home/kavia/workspace/code-generation/intelligent-conversation-hub-2964-2973/multi_agent_chatbot_frontend/src/app/services/chat.service.ts", "pattern": "/^    const agentId = this.activeAgentId$.value;$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "agents", "path": "/home/kavia/workspace/code-generation/intelligent-conversation-hub-2964-2973/multi_agent_chatbot_frontend/src/app/services/chat.service.ts", "pattern": "/^  private agents: AgentSummary[] = [$/", "language": "TypeScript", "kind": "property", "scope": "ChatService", "scopeKind": "class"}, {"_type": "tag", "name": "base", "path": "/home/kavia/workspace/code-generation/intelligent-conversation-hub-2964-2973/multi_agent_chatbot_frontend/src/app/services/chat.service.ts", "pattern": "/^    const base: RagChunk[] = [$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "chunks", "path": "/home/kavia/workspace/code-generation/intelligent-conversation-hub-2964-2973/multi_agent_chatbot_frontend/src/app/services/chat.service.ts", "pattern": "/^          chunks,$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "chunks", "path": "/home/kavia/workspace/code-generation/intelligent-conversation-hub-2964-2973/multi_agent_chatbot_frontend/src/app/services/chat.service.ts", "pattern": "/^        const chunks = this.mockRag(content);$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "constructor", "path": "/home/kavia/workspace/code-generation/intelligent-conversation-hub-2964-2973/multi_agent_chatbot_frontend/src/app/services/chat.service.ts", "pattern": "/^  constructor(private mcp: ModelContextService) {}$/", "language": "TypeScript", "kind": "method", "scope": "ChatService", "scopeKind": "class"}, {"_type": "tag", "name": "contextItems", "path": "/home/kavia/workspace/code-generation/intelligent-conversation-hub-2964-2973/multi_agent_chatbot_frontend/src/app/services/chat.service.ts", "pattern": "/^        const contextItems: ContextWindowItem[] = [$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "conv", "path": "/home/kavia/workspace/code-generation/intelligent-conversation-hub-2964-2973/multi_agent_chatbot_frontend/src/app/services/chat.service.ts", "pattern": "/^    const conv: Conversation = {$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "convId", "path": "/home/kavia/workspace/code-generation/intelligent-conversation-hub-2964-2973/multi_agent_chatbot_frontend/src/app/services/chat.service.ts", "pattern": "/^    const convId = this.activeConversationId$.value;$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "conversations$", "path": "/home/kavia/workspace/code-generation/intelligent-conversation-hub-2964-2973/multi_agent_chatbot_frontend/src/app/services/chat.service.ts", "pattern": "/^  private conversations$ = new BehaviorSubject<Conversation[]>([$/", "language": "TypeScript", "kind": "property", "scope": "ChatService", "scopeKind": "class"}, {"_type": "tag", "name": "convs", "path": "/home/kavia/workspace/code-generation/intelligent-conversation-hub-2964-2973/multi_agent_chatbot_frontend/src/app/services/chat.service.ts", "pattern": "/^    const convs = this.conversations$.value.map(c => {$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "createdAt", "path": "/home/kavia/workspace/code-generation/intelligent-conversation-hub-2964-2973/multi_agent_chatbot_frontend/src/app/services/chat.service.ts", "pattern": "/^      createdAt: now,$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "id", "path": "/home/kavia/workspace/code-generation/intelligent-conversation-hub-2964-2973/multi_agent_chatbot_frontend/src/app/services/chat.service.ts", "pattern": "/^    const id = this.uuid();$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "latency", "path": "/home/kavia/workspace/code-generation/intelligent-conversation-hub-2964-2973/multi_agent_chatbot_frontend/src/app/services/chat.service.ts", "pattern": "/^          const latency = Date.now() - start;$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "list", "path": "/home/kavia/workspace/code-generation/intelligent-conversation-hub-2964-2973/multi_agent_chatbot_frontend/src/app/services/chat.service.ts", "pattern": "/^    const list = this.conversations$.value.map(c => {$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "llmInfo", "path": "/home/kavia/workspace/code-generation/intelligent-conversation-hub-2964-2973/multi_agent_chatbot_frontend/src/app/services/chat.service.ts", "pattern": "/^          const llmInfo: ModelCallInfo = {$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "mcp", "path": "/home/kavia/workspace/code-generation/intelligent-conversation-hub-2964-2973/multi_agent_chatbot_frontend/src/app/services/chat.service.ts", "pattern": "/^  constructor(private mcp: ModelContextService) {}$/", "language": "TypeScript", "kind": "property", "scope": "ChatService", "scopeKind": "class"}, {"_type": "tag", "name": "messages", "path": "/home/kavia/workspace/code-generation/intelligent-conversation-hub-2964-2973/multi_agent_chatbot_frontend/src/app/services/chat.service.ts", "pattern": "/^      messages: []$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "now", "path": "/home/kavia/workspace/code-generation/intelligent-conversation-hub-2964-2973/multi_agent_chatbot_frontend/src/app/services/chat.service.ts", "pattern": "/^    const now = new Date().toISOString();$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "nowISO", "path": "/home/kavia/workspace/code-generation/intelligent-conversation-hub-2964-2973/multi_agent_chatbot_frontend/src/app/services/chat.service.ts", "pattern": "/^        const nowISO = new Date().toISOString();$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "planner", "path": "/home/kavia/workspace/code-generation/intelligent-conversation-hub-2964-2973/multi_agent_chatbot_frontend/src/app/services/chat.service.ts", "pattern": "/^    const planner: ProtocolActor = { id: 'planner', name: 'Planner', icon: '\ud83e\udded' };$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "r", "path": "/home/kavia/workspace/code-generation/intelligent-conversation-hub-2964-2973/multi_agent_chatbot_frontend/src/app/services/chat.service.ts", "pattern": "/^      const r = Math.random() * 16 | 0, v = c === 'x' ? r : (r & 0x3 | 0x8);$/", "language": "TypeScript", "kind": "constant", "scope": "ChatService.uuid", "scopeKind": "method"}, {"_type": "tag", "name": "rag", "path": "/home/kavia/workspace/code-generation/intelligent-conversation-hub-2964-2973/multi_agent_chatbot_frontend/src/app/services/chat.service.ts", "pattern": "/^        const rag: RagContext = {$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "reply", "path": "/home/kavia/workspace/code-generation/intelligent-conversation-hub-2964-2973/multi_agent_chatbot_frontend/src/app/services/chat.service.ts", "pattern": "/^          const reply: Message = {$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "researcher", "path": "/home/kavia/workspace/code-generation/intelligent-conversation-hub-2964-2973/multi_agent_chatbot_frontend/src/app/services/chat.service.ts", "pattern": "/^    const researcher: ProtocolActor = { id: 'researcher', name: 'Researcher', icon: '\ud83d\udd0e' };$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "safeSetTimeout", "path": "/home/kavia/workspace/code-generation/intelligent-conversation-hub-2964-2973/multi_agent_chatbot_frontend/src/app/services/chat.service.ts", "pattern": "/^        const safeSetTimeout = (fn: () => void, ms: number) => {$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "start", "path": "/home/kavia/workspace/code-generation/intelligent-conversation-hub-2964-2973/multi_agent_chatbot_frontend/src/app/services/chat.service.ts", "pattern": "/^        const start = Date.now();$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "title", "path": "/home/kavia/workspace/code-generation/intelligent-conversation-hub-2964-2973/multi_agent_chatbot_frontend/src/app/services/chat.service.ts", "pattern": "/^      title,$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "tokens", "path": "/home/kavia/workspace/code-generation/intelligent-conversation-hub-2964-2973/multi_agent_chatbot_frontend/src/app/services/chat.service.ts", "pattern": "/^            tokens: { prompt: 320, completion: 120, total: 440 }$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "top", "path": "/home/kavia/workspace/code-generation/intelligent-conversation-hub-2964-2973/multi_agent_chatbot_frontend/src/app/services/chat.service.ts", "pattern": "/^    const top = rag.chunks.slice(0, 2).map(c => `- ${c.title ?? c.source}: ${c.snippet}`).join('/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "turnId", "path": "/home/kavia/workspace/code-generation/intelligent-conversation-hub-2964-2973/multi_agent_chatbot_frontend/src/app/services/chat.service.ts", "pattern": "/^    const turnId = this.uuid();$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "updatedAt", "path": "/home/kavia/workspace/code-generation/intelligent-conversation-hub-2964-2973/multi_agent_chatbot_frontend/src/app/services/chat.service.ts", "pattern": "/^      updatedAt: now,$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "usedAt", "path": "/home/kavia/workspace/code-generation/intelligent-conversation-hub-2964-2973/multi_agent_chatbot_frontend/src/app/services/chat.service.ts", "pattern": "/^          usedAt: nowISO$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "userMsg", "path": "/home/kavia/workspace/code-generation/intelligent-conversation-hub-2964-2973/multi_agent_chatbot_frontend/src/app/services/chat.service.ts", "pattern": "/^    const userMsg: Message = {$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "uuid", "path": "/home/kavia/workspace/code-generation/intelligent-conversation-hub-2964-2973/multi_agent_chatbot_frontend/src/app/services/chat.service.ts", "pattern": "/^  private uuid(): string {$/", "language": "TypeScript", "kind": "method", "scope": "ChatService", "scopeKind": "class"}, {"_type": "tag", "name": "writer", "path": "/home/kavia/workspace/code-generation/intelligent-conversation-hub-2964-2973/multi_agent_chatbot_frontend/src/app/services/chat.service.ts", "pattern": "/^    const writer: ProtocolActor = { id: 'writer', name: 'Writer', icon: '\u270d\ufe0f' };$/", "language": "TypeScript", "kind": "constant"}], "hash": "750047cdf7b2f2142c091d5fe19640cb", "format-version": 4, "code-base-name": "multi_agent_chatbot_frontend", "filename": "multi_agent_chatbot_frontend/src/app/services/chat.service.ts", "fields": [{"name": "private agents: AgentSummary[] = [", "scope": "ChatService", "scopeKind": "class", "description": "unavailable"}, {"name": "private conversations$ = new BehaviorSubject<Conversation[]>([", "scope": "ChatService", "scopeKind": "class", "description": "unavailable"}, {"name": "constructor(private mcp: ModelContextService) {}", "scope": "ChatService", "scopeKind": "class", "description": "unavailable"}]}